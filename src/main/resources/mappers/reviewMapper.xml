<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="review">
	<!-- 기본리뷰화면. -->
	<select id="listAll" resultType="ReviewDTO">
		select * 
			from (
				select rownum as rn, A.*
				from(
					select 
					a.review_idx, a.res_idx, a.userid, a.room_idx, c.room_name, a.r_title,
					a.review_star, a.review_content, b.name, a.write_date,
					a.show, a.view_count, b.profile_img,
					(select count(*) from review_comment where a.review_idx=review_idx) as comment_count
					from review a
					join guest b 
					on a.userid = b.userid
					join rooms c
					on a.room_idx = c.room_idx
					join reservations d
					on a.res_idx = d.res_idx
					where show='y'
					order by review_idx desc
				) A
		) where rn between #{start} and #{end}
	</select>
	
	<!-- 숙소 상세 페이지 내의 해당 숙소 리뷰 목록 -->
	<select id="reviewsByRoom" resultType="ReviewDTO">
    select *
		from (
			select 
             room_idx, 
             review_idx, 
             r.userid, 
             write_date, 
             r_title, 
             review_content, 
             review_star,
             show,
             g.profile_img
			from review r join guest g 
			on r.userid = g.userid
		) where room_idx=#{room_idx} and show = 'y'
		 order by review_idx desc
	</select>
	
	<!-- 숙소 별 리뷰 개수 -->
	<select id="countByRoom" resultType="int">
		select count(*) from review
		where room_idx=#{room_idx} and
		show = 'y'
	</select>
	
	<!-- 숙소 별 별점 평균 -->
	<select id="starByRoom" resultType="double">
		select nvl(round(avg(review_star), 2),0.0) from review
		where room_idx=#{room_idx} and
		show = 'y'
	</select>

	<!-- 리뷰작성 -->
	<insert id="insert">
		INSERT INTO Review(review_idx, room_idx, userid, r_title, review_content, review_star, res_idx) 
		VALUES (Review_seq.nextval, #{room_idx}, #{userid}, #{r_title}, #{review_content}, #{review_star}, #{res_idx})
	</insert>
	
	<!-- 리뷰레코드 갯수 계산 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(show) 
		FROM review
		WHERE show = 'y'
	</select>
	
	<select id="detail" resultType="ReviewDTO">
		SELECT
			a.review_idx, 
			a.res_idx,
			c.room_idx, 
			b.name, 
			b.userid, 
			a.r_title, 
			a.review_star, 
			a.review_content,
			a.view_count, 
			a.write_date,
			c.room_name,
			a.show, 
			a.reviewAcc, 
			b.profile_img,
			(select count(*) from review_comment where a.review_idx=review_idx) as comment_count
		from review a
		join guest b
		on a.userid = b.userid
		join rooms c
		on a.room_idx = c.room_idx
		where review_idx=#{review_idx}
	</select>
	
	<insert id="addAttach">
		insert into review_attach (fullName, review_idx) values
		(#{fullName}, review_seq.currval)
	</insert>
	
	<!-- 첨부파일 삭제 -->
	<delete id="deleteFile">
		delete from review_attach
		where fullName=#{fullName}
	</delete>
	
	<!-- 첨부파일 목록 불러오기 -->
	<select id="getAttach" resultType="String">
		select fullName from review_attach
		where review_idx = #{review_idx}
		order by regdate desc
	</select>
  
	<!--(admin page,reviewUserList 페이지) 게스트 리뷰글 가져오기  -->
   <select id="getreview" resultType="ReviewDTO">
   select    
        rev.room_idx, 
        rev.review_idx, 
        rev.userid, 
        rev.res_idx,
        rev.write_date, 
        rev.r_title, 
        rev.review_content, 
        rev.review_star,
        res.checkin_date,
        res.checkout_date,
        ro.h_userid,
        ro.room_name,
        ro.address1,
        ro.address2,
        g.profile_img,
        (select count(*) from review where rev.userid=userid) as review_count,
        rev.show,
        rp.photo1
      from review rev
      join reservations res on rev.res_idx = res.res_idx
      join rooms ro on rev.room_idx = ro.room_idx
      join guest g on rev.userid = g.userid
      join room_photo rp on ro.room_idx=rp.room_idx
      where rev.userid=#{userid}
      order by review_idx desc
   </select>
	
	<!-- 첨부파일 확인(기존에 있는 파일인지)-->
	<select id="checkattach">
		select count(*) from review_attach
		where review_idx=#{review_idx} and fullName=#{fullName}
	</select> 
	
	<!-- 첨부파일수정 -->
	<insert id="updateAttach">
		insert into review_attach (fullName, review_idx)
		values (#{fullName}, #{review_idx})
	</insert>
	
	<!-- 리뷰수정 -->
	<update id="update">
		update review set r_title=#{r_title}, review_star=#{review_star},
		review_content=#{review_content}
		where review_idx=#{review_idx}
	</update>
	
	<!-- 리뷰삭제 -->
	<delete id="delete">
		update review set show='n' where review_idx=#{review_idx}
	</delete>
	
	<!-- 댓글 리스트 -->
	<select id="comment" resultType="ReCommentDTO">
		select 
				a.comment_idx, 
				a.review_idx, 
				a.writer, 
				a.contents, 
				a.write_date,
				b.profile_img, 
				c.h_profile_img,
				(select userid from review where review_idx=a.review_idx) as userid
		from review_comment a
		full outer join guest b
		on a.writer=b.userid
		full outer join host c
		on a.writer=c.h_userid
		where review_idx=#{review_idx}
		order by a.write_date asc
	</select>
	
	<!-- 댓글작성 -->
	<insert id="addComment">
		insert into review_comment
		(comment_idx, review_idx, writer, contents)
		values((select nvl(max(comment_idx)+1,1) from review_comment), 
		#{review_idx}, #{writer}, #{contents})
	</insert>
	
	<!-- 댓글삭제 -->
	<delete id="delComment">
		delete from review_comment
		where review_idx=#{review_idx} and comment_idx=#{comment_idx} 
	</delete>
	
	<!-- 조회수증가 -->
	<update id="increaseViewcnt">
		update review set view_count=view_count+1
	 	where review_idx=#{review_idx}
	</update>
	<!--(admin page) 게스트 신고글 가져오기  -->
	<select id="getaccuse"
	resultType="com.example.stayhere.model.review.dto.ReviewAccuseDTO">
	select
			acc_idx,
			review_idx,
			userid,
			writer,
			acc_content,
			(select room_idx from review where a.review_idx=review_idx) room_idx, 
			(select r_title from review where review_idx=a.review_idx) r_title
	from review_accuse a
	where writer = #{userid}
</select>
	<!--(admin page) 룸 리뷰글 가져오기  -->
	<select id="roomreview" resultType="ReviewDTO">
	 select *
		from (
			select 
                room_idx, 
                review_idx, 
                r.userid, 
                write_date, 
                r_title, 
                review_content, 
                review_star,
                (select room_name from rooms where r.room_idx=room_idx) as room_name,
                g.profile_img
			from review r join guest g 
			on r.userid = g.userid
		) where room_idx=#{room_idx} order by review_idx desc	
	</select>
	

	
	<!--리뷰 글 신고하기 -->
	<insert id="insertaccuse">
	 INSERT INTO review_accuse(acc_idx, review_idx, userid, writer, acc_content) 
	 VALUES (review_accuse_seq.nextval,#{review_idx},#{userid},#{writer},#{acc_content})
	</insert>
	
	<select id="getReviewId" resultType="int">
		select nvl(max(review_idx), 0) 
		from Review 
		where res_idx=#{res_idx}
	</select>
	
	<select id="countByUser" resultType="int">
		select count(*) from review
		where userid=#{userid} and show ='y'
	</select>
	
</mapper>














