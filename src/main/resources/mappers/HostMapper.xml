<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="host">
<select id="loginCheck" resultType="String" parameterType="HostDTO">
		select h_name from host 
		where h_userid=#{h_userid}
		and h_passwd=#{h_passwd}
</select>

<select id="loginOkNick" resultType="HostDTO" parameterType="HostDTO">
		select * from host 
		where h_userid like #{h_userid}
</select>

<select id="viewHost" resultType="HostDTO">
  select * from Host
  where h_userid = #{h_userid}
</select>

<select id="idCheck" resultType="int">
  	select count(h_userid) from Host where h_userid=#{h_userid}
</select> 

<select id="emailCheck" resultType="int">
  	select count(h_email) from Host where h_email=#{h_email}
</select>

<update id="updatePw" parameterType="HostDTO">
	update Host
	set h_passwd = #{h_passwd} 
	where h_userid = #{h_userid}
</update>
 
<insert id="insert" parameterType="HostDTO">
	insert into Host(h_userid,h_name,h_passwd,h_email,h_phone,h_manager_num) 
	values (#{h_userid},#{h_name},#{h_passwd},#{h_email},#{h_phone},#{h_manager_num})
</insert>

<update id="update">
update Host set 
h_profile_img= #{h_profile_img},
h_passwd=#{h_passwd},
h_email=#{h_email},
h_phone=#{h_phone},
h_manager_num=#{h_manager_num}
where h_userid=#{h_userid}
</update>

<delete id="delete">
delete from Host where h_userid=#{h_userid}
</delete>

<select id="rooms_List" resultType="RoomsDTO">
		select *
		from (
		select rownum as rn, A.*
		from (
		select
		r.room_idx,
		r.h_userid,
		r.room_name,
		r.room_price,
		r.contents,
		r.city,
		r.country,
		r.address1,
		r.address2,
		r.zipcode,
		r.check_in,
		r.check_out,
		r.beds,
		r.baths,
		r.room_type,
		r.lat,
		r.lng,
		r.admin_confirm,
		rp.photo1,
		rp.photo2,
		rp.photo3,
		rp.photo4
		from rooms r join room_photo rp on r.room_idx = rp.room_idx
		where r.h_userid=#{h_userid}
		order by check_in desc) A
		) where rn between #{start} and #{end}

</select>

<select id="rooms_Confirm" resultType="RoomsDTO">
		select *
		from (
		select rownum as rn, A.*
		from (
		select
		r.room_idx,
		r.h_userid,
		r.room_name,
		r.room_price,
		r.contents,
		r.city,
		r.country,
		r.address1,
		r.address2,
		r.zipcode,
		r.check_in,
		r.check_out,
		r.beds,
		r.baths,
		r.room_type,
		r.lat,
		r.lng,
		r.max_people,
		r.add_people,
		r.admin_confirm,
		rp.photo1,
		rp.photo2,
		rp.photo3,
		rp.photo4
		from rooms r join room_photo rp on r.room_idx = rp.room_idx
		where r.h_userid=#{h_userid} and admin_confirm=#{select}
		order by check_in desc) A
		) where rn between #{start} and #{end} 
</select>

<select id="delete_check" resultType="String">
select room_name from Rooms
where h_userid=#{h_userid} and admin_confirm ='승인'
</select>
<select id="getRoomCount" resultType="int">
select count(*) from rooms 
where h_userid=#{h_userid} 
and not(admin_confirm = '승인') 
and admin_confirm=#{select}
</select>

<select id="getConfirmRoom" resultType="int">
select count(*) from rooms where h_userid=#{h_userid} and admin_confirm='승인'
</select>

<select id="rooms_money">
select r.h_userid, sum(r.room_price)
from rooms r, reservations rs
where r.room_idx=rs.room_idx
and r.check_in between #{check_in} and add_months(#{check_in},1)
and r.h_userid=#{h_userid} 
and not(rs.res_state = '취소완료')
group by r.h_userid
</select>
<select id="hostcount" resultType="int">
select count(*) from host
</select>

<select id="gethost" resultType="HostDTO">
 select *
			from (
			   select rownum as rn, A.*
			    from (
	select 
	a.h_userid, 
	a.h_name,
	a.h_email, 
	a.h_phone,
	a.h_profile_img,
	a.h_join_date,
	a.h_blacklist,
	nvl(sum(b.total_price),0) total_price,
	(select count(*) from rooms where h_userid=a.h_userid) as room_count
	from host a
	left join reservations b
	on a.h_userid=b.h_userid
	group by a.h_userid, a.h_name, a.h_email, a.h_phone,a.h_profile_img,a.h_join_date,a.h_blacklist 
	order by a.h_userid desc)A    
	) where rn between #{start} and #{end}
</select>

<update id="goh_normal">
 update host set h_blacklist = 'n'
 where h_userid=#{h_userid}
</update>

<update id="goh_black">
 update host set h_blacklist = 'y'
 where h_userid=#{h_userid}
</update>

<select id="blackhostcount" resultType="int">
 select count(*) from host
 where h_blacklist = 'y'
</select>

<select id="getblackhost" resultType="HostDTO">
 select *
			from (
			   select rownum as rn, A.*
			    from (
	select 
	a.h_userid, 
	a.h_name,
	a.h_email, 
	a.h_phone,
	a.h_profile_img,
	a.h_join_date,
	a.h_blacklist,
	nvl(sum(b.total_price),0) total_price,
	(select count(*) from rooms where h_userid=a.h_userid) as room_count
	from host a
	left join reservations b
	on a.h_userid=b.h_userid
	group by a.h_userid, a.h_name, a.h_email, a.h_phone,a.h_profile_img,a.h_join_date,a.h_blacklist
	having h_blacklist = 'y' 
	order by a.h_userid desc)A    
	) where rn between #{start} and #{end}
</select>

<select id="getroom" resultType="RoomsDTO">
 select * from rooms
 where h_userid=#{h_userid}
</select>

<select id="roomsConfirm" resultType="RoomsDTO">
 select * from rooms, room_photo
 where rooms.room_idx = room_photo.room_idx
 and h_userid=#{h_userid}
</select>

<!-- DB 비밀번호 조회 -->
<select id="findByPasswd" resultType="String">
	select h_passwd from host 
	where h_userid=#{h_userid}
</select>

</mapper>














