<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="chat">
	
	
	<insert id="addChatRoom">
		insert into chatroom(c_idx, room_idx, h_userid, userid, 
		create_date, h_name, user_name, room_name, chat_read_user, chat_read_host)
		values (chat_room_seq.nextval, #{room_idx}, #{h_userid}, #{userid}, 
		#{create_date}, #{h_name}, #{user_name}, #{room_name}, 1, 1)
	</insert>
	
	
	<update id="updateFileName">
		update chatroom
		set filename = #{fileName}
		where c_idx = ${c_idx}
	</update>
	
	<select id="countByChatId" resultType="int">
		select count(*)
		from chatroom
		where room_idx = #{room_idx} and userid=#{userid}
	</select>
	
	<select id="getChatRoomIdx" resultType="int">
		select c_idx 
		from chatroom
		where room_idx = #{room_idx} and userid=#{userid}
	</select>
	
	<select id="findByChatInfo" resultType="ChatRoomDTO">
		select 
        c.c_idx,
        c.room_idx,
        c.h_userid,
        c.userid,
        c.filename,
        c.create_date,
        c.h_name,
        c.user_name,
        c.chat_read_user,
        c.chat_read_host,
        c.room_name,
        rp.photo1
		from chatroom c join room_photo rp on c.room_idx = rp.room_idx
		where c.room_idx =#{room_idx} and	userid = #{userid}
	</select>
	
	<update id="updateChatReadUser">
		update chatroom
		set chat_read_user = #{chat_read_user}
		where c_idx= #{c_idx}
	</update>
	
	<update id="updateChatReadHost">
		update chatroom
		set chat_read_host = #{chat_read_host}
		where c_idx= #{c_idx}
	</update>
	
	<select id="getUnreadMessages" resultType="int">
		select count(c_idx)
		from chatroom
		where (userid=#{userid} and chat_read_user=0) or 
		(h_userid=#{userid} and chat_read_host=0)
	</select>
	
	<select id="findByUserId" resultType="ChatListDTO">
		select * from chatroom c 
		join room_photo rp on c.room_idx = rp.room_idx
		where userid = #{userid} or h_userid = #{userid}
	</select>
	
	<select id="getUnreadChatRoom" resultType="int">
		select c_idx
		from chatroom
		where (userid=#{userid} and chat_read_user=0) or 
		(h_userid=#{userid} and chat_read_host=0)
	</select>
	
	<select id="findByReadCheck" resultType="ChatRoomDTO">
		select chat_read_user, chat_read_host 
		from chatroom 
		where c_idx=#{c_idx}
	</select>
	
	<!-- 게스트별 채팅 건수  -->
	<select id="countByUser" resultType="int">
		select count(*) 
		from chatroom 
		where userid=#{userid}
	</select>

	<!-- 채팅리스트 갯수 -->
	<select id="getChatRoomCount" resultType="int">
		select count(*) from chatroom 
		where (h_userid=#{sessionId} or userid=#{sessionId})
			and (room_name like #{keyword} or userid like #{keyword} 
			or h_userid like #{keyword} or h_name like #{keyword} 
			or user_name like #{keyword})
	</select>
	
	<!-- 채팅리스트 -->
	<select id="getChatRoomList" resultType="ChatListDTO">
	select * from(
		select A.*, rownum as rn from(
			select * from
			chatroom c join room_photo rp on c.room_idx = rp.room_idx
			where (h_userid=#{sessionId} or userid=#{sessionId})
			and (room_name like #{keyword} or userid like #{keyword} 
			or h_userid like #{keyword} or h_name like #{keyword} 
			or user_name like #{keyword})
			order by chat_read_host asc, create_date desc
		) A
	) where rn between #{start} and #{end}
	</select>
	
	<!-- 호스트 프로필 사진 경로 찾기 -->
	<select id="findByHostProfile" resultType="String">
		select h_profile_img from host 
		where h_userid=#{h_userid}
	</select>	
	
</mapper>














